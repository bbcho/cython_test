on:
  push:
    branches: [main]

jobs:
  # https://github.com/marketplace/actions/python-wheels-manylinux-build
  Linux-build:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: build manylinux wheels
        uses: RalfG/python-wheels-manylinux-build@v0.6.0 #-manylinux2014_x86_64
        with:
          python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311'
          build-requirements: 'setuptools wheel twine cython numpy cryptography'
          system-packages: 'libffi libffi-devel'
          # pre-build-command: 'sh pre-build-script.sh'
          # package-path: 'my_project'
          pip-wheel-args: '-w ./dist --no-deps'
      - name: publish
        run: |
          python -m pip install --upgrade pip
          pip install twine
          twine upload --repository testpypi dist/*

  Matrix-build:
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine cython numpy
      - name: build wheel
        run: |
          pip install wheel
          python setup.py sdist bdist_wheel
          twine upload --repository testpypi dist/*
        continue-on-error: true